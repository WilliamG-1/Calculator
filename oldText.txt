
function convertToOperation (string) {
    
    var x = 0;
    var y = 0;
    var result = 0;
    var numberShouldBeMultiplied = false;

    const multNumberArray = string.match(/\d+(?=×)|(?<=×)\d+|\d+(?=\/)|(?<=\/)\d+/g); // Get all numbers that either preceed or proceed a multiplication/division operator
    const multOperationArray = string.match(/\/|×/g);
    const addNumberArray = string.match(/\d+(?=\+)|(?<=\+)\d+|\d+(?=−)|(?<=−)\d+/g) // Get all numbers that either preceed or proceed an addition/subtraction operator
    const addOperationArray = string.match(/−|\+/)
    var currentNum = 0;
    var decimalPlace = 1;
    function reset() {
        x = 0;
        y = 0;
        currentNum = 0;
        decimalPlace = 1;
    }


    string.forEach((char)=>{
        switch(char)
        {
            case '×':
                multNumbers.push(currentNum);
                numberShouldBeMultiplied = true; // Next number should be pushed into array for multiplication/divison
                reset();
                break;
            case '+':
                if (numberShouldBeMultiplied) {multNumbers.push(currentNum); numberShouldBeMultiplied = false;}
                else {addNumbers.push(currentNum);}
                reset();
                break;
            default:
                currentNum += parseInt(char) * decimalPlace;
                decimalPlace *= 10;
                break;
        }
    });
    return result;
}

function evaluateOperations(multArray, addArray){

}

// const stringg = "1+3+5×3+67×20/20/12";
// console.log(stringg);
// //const m = stringg.match(/\d+(?=\×)|(?<=\×)\d+/g);
// const a = stringg.match(/\d+(?=×)|(?<=×)\d+|\d+(?=\/)|(?<=\/)\d+/g);
// const b = stringg.match(/\/|×/g);
// const c = stringg.match(/\d+(?=\+)|(?<=\+)\d+|\d+(?=−)|(?<=−)\d+/g); // Get all numbers that either preceed or proceed an addition/subtraction operator
// const d = stringg.match(/−|\+/g)
// console.log(a);
// console.log(b);
// console.log(c);
// console.log(d);

// console.log("--------------------------------------");